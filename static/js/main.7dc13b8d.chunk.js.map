{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newMovie","formValid","handleChange","event","setState","target","name","value","handleBlur","replace","Object","values","every","splice","handlerFocus","clearForm","handleSubmit","preventDefault","props","onAdd","this","onSubmit","type","classNames","invalid","placeholder","onChange","onBlur","onFocus","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dc13b8d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport classNames from 'classnames';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd:(newMovie: Movie) => void,\n};\n\ntype State = {\n  newMovie: Movie,\n  title: boolean,\n  description: boolean,\n  imgUrl: boolean,\n  imdbUrl: boolean,\n  imdbId: boolean,\n  formValid: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n\n    title: false,\n    description: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n    formValid: true,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((state) => ({\n      newMovie: {\n        ...state.newMovie,\n        [event.target.name]: event.target.value,\n      },\n    }));\n  };\n\n  handleBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state.newMovie;\n\n    switch (event.target.name) {\n      case 'title':\n        this.setState({ title: title === '' });\n        break;\n      case 'description':\n        this.setState({ description: description === '' });\n        break;\n      case 'imgUrl':\n        this.setState({ imgUrl: imgUrl === imgUrl.replace(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/, '') });\n        break;\n      case 'imdbUrl':\n        this.setState({ imdbUrl: imdbUrl === imdbUrl.replace(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/, '') });\n        break;\n      case 'imdbId':\n        this.setState({ imdbId: imdbId === '' });\n        break;\n      default:\n        break;\n    }\n\n    this.setState((state) => ({\n      formValid: !(Object.values(state.newMovie).every(value => value !== '') && Object.values(state).splice(1, 5).every(value => value === false)),\n    }));\n  };\n\n  handlerFocus = (event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (event.target.name) {\n      case 'title':\n        this.setState({ title: false });\n        break;\n      case 'description':\n        this.setState({ description: false });\n        break;\n      case 'imgUrl':\n        this.setState({ imgUrl: false });\n        break;\n      case 'imdbUrl':\n        this.setState({ imdbUrl: false });\n        break;\n      case 'imdbId':\n        this.setState({ imdbId: false });\n        break;\n      default:\n        break;\n    }\n  };\n\n  clearForm = () => {\n    this.setState({\n      newMovie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      formValid: true,\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state.newMovie);\n    this.clearForm();\n  };\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n    } = this.state.newMovie;\n\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <h1 className=\"form__title\">Add new movie</h1>\n\n        {this.state.title && <div className=\"error\">required field</div> }\n        <input\n          type=\"text\"\n          name=\"title\"\n          className={classNames('form__item', { invalid: this.state.title })}\n          placeholder=\"Title\"\n          value={title}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handlerFocus}\n        />\n\n        {this.state.description && <div className=\"error\">required field</div> }\n        <input\n          type=\"text\"\n          name=\"description\"\n          className={classNames('form__item', { invalid: this.state.description })}\n          placeholder=\"Description\"\n          value={description}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handlerFocus}\n        />\n\n        {this.state.imgUrl && <div className=\"error\">required field - enter url</div> }\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          className={classNames('form__item', { invalid: this.state.imgUrl })}\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handlerFocus}\n        />\n\n        {this.state.imdbUrl && <div className=\"error\">required field - enter url</div> }\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          className={classNames('form__item', { invalid: this.state.imdbUrl })}\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handlerFocus}\n        />\n\n        {this.state.imdbId && <div className=\"error\">required field</div> }\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          className={classNames('form__item', { invalid: this.state.imdbId })}\n          placeholder=\"imdbId\"\n          value={imdbId}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onFocus={this.handlerFocus}\n        />\n\n        <button type=\"submit\" disabled={this.state.formValid} className=\"form__button\">Add movie</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}